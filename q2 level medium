import java.io.Serializable;
import java.io.*;

public class Student implements Serializable {
    private int id;
    private String name;
    private double gpa;

    // Constructor
    public Student(int id, String name, double gpa) {
        this.id = id;
        this.name = name;
        this.gpa = gpa;
    }

    // Getters
    public int getId() {
        return id;
    }

    public String getName() {
        return name;
    }

    public double getGpa() {
        return gpa;
    }

    @Override
    public String toString() {
        return "Student{" +
                "id=" + id +
                ", name='" + name + '\'' +
                ", gpa=" + gpa +
                '}';
    }
}

public class SerializationDemo {
    public static void main(String[] args) {
        // Create a Student object
        Student student = new Student(1, "John Doe", 3.8);

        // Serialize the Student object to a file
        serializeStudent(student, "student.ser");

        // Deserialize the Student object from the file
        Student deserializedStudent = deserializeStudent("student.ser");

        // Display the deserialized Student object
        if (deserializedStudent != null) {
            System.out.println("Deserialized Student: " + deserializedStudent);
        }
    }

    // Method to serialize a Student object to a file
    public static void serializeStudent(Student student, String fileName) {
        try (FileOutputStream fileOut = new FileOutputStream(fileName);
                ObjectOutputStream out = new ObjectOutputStream(fileOut)) {
            out.writeObject(student); // Serialize the object
            System.out.println("Student object serialized and saved to " + fileName);
        } catch (FileNotFoundException e) {
            System.err.println("File not found: " + e.getMessage());
        } catch (IOException e) {
            System.err.println("Error during serialization: " + e.getMessage());
        }
    }

    // Method to deserialize a Student object from a file
    public static Student deserializeStudent(String fileName) {
        Student student = null;
        try (FileInputStream fileIn = new FileInputStream(fileName);
                ObjectInputStream in = new ObjectInputStream(fileIn)) {
            student = (Student) in.readObject(); // Deserialize the object
            System.out.println("Student object deserialized from " + fileName);
        } catch (FileNotFoundException e) {
            System.err.println("File not found: " + e.getMessage());
        } catch (IOException e) {
            System.err.println("Error during deserialization: " + e.getMessage());
        } catch (ClassNotFoundException e) {
            System.err.println("Class not found: " + e.getMessage());
        }
        return student;
    }
}
